{"version":3,"file":"static/js/774.8220de46.chunk.js","mappings":"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","sources":["../node_modules/proxy-compare/src/index.ts","../node_modules/valtio/esm/vanilla.mjs","../node_modules/@web3modal/core/src/controllers/ClientCtrl.ts","../node_modules/@web3modal/core/src/controllers/AccountCtrl.ts","../node_modules/@web3modal/core/src/utils/CoreUtil.ts","../node_modules/@web3modal/core/src/controllers/OptionsCtrl.ts","../node_modules/@web3modal/core/src/controllers/ConfigCtrl.ts","../node_modules/@web3modal/core/src/utils/ExplorerUtil.ts","../node_modules/@web3modal/core/src/controllers/ExplorerCtrl.ts","../node_modules/@web3modal/core/src/controllers/RouterCtrl.ts","../node_modules/@web3modal/core/src/controllers/ModalCtrl.ts","../node_modules/@web3modal/core/src/controllers/ThemeCtrl.ts","../node_modules/@web3modal/core/src/controllers/ToastCtrl.ts","../node_modules/@web3modal/core/src/utils/PolyfillUtil.ts","../node_modules/@web3modal/standalone/src/client.ts"],"sourcesContent":["// symbols\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst IS_TARGET_COPIED_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// Properties that are both non-configurable and non-writable will break\n// the proxy get trap when we try to return a recursive/child compare proxy\n// from them. We can avoid this by making a copy of the target object with\n// all descriptors marked as configurable, see `copyTargetObject`.\n// See: https://github.com/dai-shi/proxy-compare/pull/8\nconst needsToCopyTargetObject = (obj: object) => (\n  Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n    (descriptor) => !descriptor.configurable && !descriptor.writable,\n  )\n);\n\n// Make a copy with all descriptors marked as configurable.\nconst copyTargetObject = <T extends object>(obj: T): T => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj) as T;\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [IS_TARGET_COPIED_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\ntype TargetCache<T extends object> = WeakMap<\n  object,\n  readonly [target: T, copiedTarget?: T]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, isTargetCopied: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [IS_TARGET_COPIED_PROPERTY]: isTargetCopied,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (\n    type:\n      | typeof HAS_KEY_PROPERTY\n      | typeof ALL_OWN_KEYS_PROPERTY\n      | typeof HAS_OWN_KEY_PROPERTY\n      | typeof KEYS_PROPERTY,\n    key?: string | symbol,\n  ) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = {};\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (type === ALL_OWN_KEYS_PROPERTY) {\n        used[ALL_OWN_KEYS_PROPERTY] = true;\n      } else {\n        let set = used[type];\n        if (!set) {\n          set = new Set();\n          used[type] = set;\n        }\n        set.add(key as string | symbol);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(KEYS_PROPERTY, key);\n      return createProxy(\n        Reflect.get(target, key),\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      recordUsage(HAS_KEY_PROPERTY, key);\n      return Reflect.has(target, key);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      recordUsage(HAS_OWN_KEY_PROPERTY, key);\n      return Reflect.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(ALL_OWN_KEYS_PROPERTY);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (isTargetCopied) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n  targetCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  let targetAndCopied = (\n    targetCache && (targetCache as TargetCache<typeof obj>).get(obj)\n  );\n  if (!targetAndCopied) {\n    const target = getOriginalObject(obj);\n    if (needsToCopyTargetObject(target)) {\n      targetAndCopied = [target, copyTargetObject(target)];\n    } else {\n      targetAndCopied = [target];\n    }\n    targetCache?.set(obj, targetAndCopied);\n  }\n  const [target, copiedTarget] = targetAndCopied;\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (\n    !handlerAndState\n    || handlerAndState[1][IS_TARGET_COPIED_PROPERTY] !== !!copiedTarget\n  ) {\n    handlerAndState = createProxyHandler<typeof target>(target, !!copiedTarget);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      copiedTarget || target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isAllOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  try {\n    for (const key of used[HAS_KEY_PROPERTY] || []) {\n      changed = Reflect.has(prevObj, key) !== Reflect.has(nextObj, key);\n      if (changed) return changed;\n    }\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n      changed = isAllOwnKeysChanged(prevObj, nextObj);\n      if (changed) return changed;\n    } else {\n      for (const key of used[HAS_OWN_KEY_PROPERTY] || []) {\n        const hasPrev = !!Reflect.getOwnPropertyDescriptor(prevObj, key);\n        const hasNext = !!Reflect.getOwnPropertyDescriptor(nextObj, key);\n        changed = hasPrev !== hasNext;\n        if (changed) return changed;\n      }\n    }\n    for (const key of used[KEYS_PROPERTY] || []) {\n      changed = isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n      if (changed) return changed;\n    }\n    if (changed === null) changed = true;\n    return changed;\n  } finally {\n    if (cache) {\n      cache.set(prevObj, {\n        [NEXT_OBJECT_PROPERTY]: nextObj,\n        [CHANGED_PROPERTY]: changed,\n      });\n    }\n  }\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n/**\n * Convert `affected` to path list\n *\n * `affected` is a weak map which is not printable.\n * This function is can convert it to printable path list.\n * It's for debugging purpose.\n *\n * @param obj - An object that is used with `createProxy`.\n * @param affected - A weak map that is used with `createProxy`.\n * @param onlyWithValues - An optional boolean to exclude object getters.\n * @returns - An array of paths.\n */\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n  onlyWithValues?: boolean,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used[HAS_KEY_PROPERTY]?.forEach((key) => {\n        const segment = `:has(${String(key)})`;\n        list.push(path ? [...path, segment] : [segment]);\n      });\n      if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        const segment = ':ownKeys';\n        list.push(path ? [...path, segment] : [segment]);\n      } else {\n        used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n          const segment = `:hasOwn(${String(key)})`;\n          list.push(path ? [...path, segment] : [segment]);\n        });\n      }\n      used[KEYS_PROPERTY]?.forEach((key) => {\n        if (!onlyWithValues || 'value' in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk((x as any)[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n","import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(snap, key)) {\n      return;\n    }\n    const value = Reflect.get(target, key);\n    const desc = {\n      value,\n      enumerable: true,\n      // This is intentional to avoid copying with proxy-compare.\n      // It's still non-writable, so it avoids assigning a value.\n      configurable: true\n    };\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n    } else if (value instanceof Promise) {\n      delete desc.value;\n      desc.get = () => handlePromise(value);\n    } else if (proxyStateMap.has(value)) {\n      const [target2, ensureVersion] = proxyStateMap.get(\n        value\n      );\n      desc.value = createSnapshot(\n        target2,\n        ensureVersion(),\n        handlePromise\n      );\n    }\n    Object.defineProperty(snap, key, desc);\n  });\n  return snap;\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env && import.meta.env.MODE) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxyFunction(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (\"value\" in desc) {\n      proxyObject[key] = initialObject[key];\n      delete desc.value;\n      delete desc.writable;\n    }\n    Object.defineProperty(baseObject, key, desc);\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [defaultProxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return defaultProxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n","import type { ClientCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nlet client: ClientCtrlState['ethereumClient'] = undefined\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  ethereumClient: undefined,\n\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    client = ethereumClient\n  },\n\n  client() {\n    if (client) {\n      return client\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { AccountCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<AccountCtrlState>({\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: AccountCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  async fetchProfile(\n    preloadAvatarFn: (avatar: string) => Promise<unknown>,\n    profileAddress?: `0x${string}`\n  ) {\n    try {\n      state.profileLoading = true\n      const address = profileAddress ?? state.address\n      const { id } = ClientCtrl.client().getDefaultChain()\n      if (address && id === 1) {\n        const [name, avatar] = await Promise.all([\n          ClientCtrl.client().fetchEnsName({ address, chainId: 1 }),\n          ClientCtrl.client().fetchEnsAvatar({ address, chainId: 1 })\n        ])\n        if (avatar) {\n          await preloadAvatarFn(avatar)\n        }\n        state.profileName = name\n        state.profileAvatar = avatar\n      }\n    } finally {\n      state.profileLoading = false\n    }\n  },\n\n  async fetchBalance(balanceAddress?: `0x${string}`) {\n    try {\n      state.balanceLoading = true\n      const address = balanceAddress ?? state.address\n      if (address) {\n        const balance = await ClientCtrl.client().fetchBalance({ address })\n        state.balance = { amount: balance.formatted, symbol: balance.symbol }\n      }\n    } finally {\n      state.balanceLoading = false\n    }\n  },\n\n  setAddress(address: AccountCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: AccountCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    state.profileName = undefined\n    state.profileAvatar = undefined\n    state.balance = undefined\n  }\n}\n","export const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  W3M_VERSION: 'W3M_VERSION',\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  },\n\n  setWeb3ModalVersionInStorage() {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem(CoreUtil.W3M_VERSION, process.env.ROLLUP_W3M_VERSION ?? 'UNKNOWN')\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  walletConnectVersion: 1\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setWalletConnectVersion(walletConnectVersion: OptionsCtrlState['walletConnectVersion']) {\n    state.walletConnectVersion = walletConnectVersion\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: false,\n  enableAccountView: true,\n  enableExplorer: true,\n  defaultChain: undefined,\n  explorerAllowList: undefined,\n  explorerDenyList: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setWalletConnectVersion(config.walletConnectVersion ?? 1)\n\n    if (!OptionsCtrl.state.isStandalone) {\n      const chain = ClientCtrl.client().getDefaultChain()\n      OptionsCtrl.setSelectedChain(chain)\n      OptionsCtrl.setChains(ClientCtrl.client().chains)\n    }\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    }\n\n    CoreUtil.setWeb3ModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport const ExplorerUtil = {\n  async fetchWallets(projectId: string, params: PageParams): Promise<ListingResponse> {\n    const urlParams = formatParams(params)\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n    const fetched = await fetch(fetcUrl)\n\n    return fetched.json()\n  },\n\n  formatImageUrl(projectId: string, imageId: string) {\n    return `${EXPLORER_API}/v3/logo/lg/${imageId}?projectId=${projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return ExplorerUtil.formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { AccountCtrl } from './AccountCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri?: string\n  standaloneChains?: string[]\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isStandalone, isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      const { isConnected } = AccountCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n\n      if (isStandalone) {\n        OptionsCtrl.setStandaloneUri(options?.uri)\n        OptionsCtrl.setStandaloneChains(options?.standaloneChains)\n        RouterCtrl.replace('ConnectWallet')\n      } else if (options?.route) {\n        RouterCtrl.replace(options.route)\n      } else if (isConnected) {\n        RouterCtrl.replace('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.replace('SelectNetwork')\n      } else {\n        RouterCtrl.replace('ConnectWallet')\n      }\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          if (OptionsCtrl.state.isUiLoaded && OptionsCtrl.state.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@web3modal/core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@web3modal/core'\n\n/**\n * Types\n */\nexport type Web3ModalConfig = Omit<ConfigCtrlState, 'enableStandaloneMode'> &\n  ThemeCtrlState & {\n    walletConnectVersion: 1 | 2\n  }\n\n/**\n * Client\n */\nexport class Web3Modal {\n  public constructor(config: Web3ModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig({ enableStandaloneMode: true, ...config })\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@web3modal/ui')\n      const modal = document.createElement('w3m-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["Symbol","Object","getPrototypeOf","objectsToTrack","WeakMap","isObjectToTrack","obj","has","get","getProto","prototype","Array","getUntracked","GET_ORIGINAL_SYMBOL","markToTrack","mark","set","isObject","x","proxyStateMap","refSet","WeakSet","buildProxyFunction","objectIs","is","newProxy","target","handler","Proxy","canProxy","isArray","iterator","Error","Number","Date","String","RegExp","ArrayBuffer","defaultHandlePromise","promise","status","value","reason","snapCache","createSnapshot","version","handlePromise","cache","snap","create","Reflect","ownKeys","forEach","key","getOwnPropertyDescriptor","desc","enumerable","configurable","Promise","target2","ensureVersion","defineProperty","proxyCache","versionHolder","proxyFunction","initialObject","found","listeners","Set","notifyUpdate","op","nextVersion","listener","checkVersion","createPropListener","prop","newOp","propProxyStates","Map","removePropListener","_a","entry","delete","call","baseObject","deleteProperty","prevValue","deleted","receiver","hasPrevValue","nextValue","then","v","catch","e","childProxyState","propProxyState","size","remove","addPropListener","proxyObject","proxyState","nextCheckVersion","propVersion","add","writable","defaultProxyFunction","proxy","subscribe","callback","notifyInSync","console","warn","ops","addListener","isListenerActive","removeListener","push","splice","resolve","client","ClientCtrl","ethereumClient","setEthereumClient","state","address","profileName","profileAvatar","profileLoading","balanceLoading","balance","isConnected","AccountCtrl","valtioSub","getAccount","account","fetchProfile","preloadAvatarFn","profileAddress","getDefaultChain","id","all","fetchEnsName","chainId","fetchEnsAvatar","avatar","name","fetchBalance","balanceAddress","amount","formatted","symbol","setAddress","setIsConnected","resetBalance","resetAccount","CoreUtil","WALLETCONNECT_DEEPLINK_CHOICE","W3M_VERSION","isMobile","window","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isEmptyObject","getOwnPropertyNames","length","getOwnPropertySymbols","isHttpUrl","url","startsWith","formatNativeUrl","appUrl","wcUri","this","formatUniversalUrl","safeAppUrl","replaceAll","setWalletConnectDeepLink","encodedWcUrl","encodeURIComponent","plainAppUrl","endsWith","slice","wait","miliseconds","setTimeout","openHref","href","open","localStorage","setItem","JSON","stringify","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","isNull","setWeb3ModalVersionInStorage","selectedChain","chains","standaloneChains","standaloneUri","isStandalone","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","walletConnectVersion","OptionsCtrl","setChains","setStandaloneChains","setStandaloneUri","getSelectedChain","getNetwork","chain","setSelectedChain","setIsStandalone","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setWalletConnectVersion","projectId","mobileWallets","desktopWallets","walletImages","chainImages","tokenImages","enableStandaloneMode","enableNetworkView","enableAccountView","enableExplorer","defaultChain","explorerAllowList","explorerDenyList","termsOfServiceUrl","privacyPolicyUrl","ConfigCtrl","setConfig","config","_b","_c","_d","assign","EXPLORER_API","formatParams","params","stringParams","fromEntries","entries","filter","_","map","toString","URLSearchParams","ExplorerUtil","fetchWallets","urlParams","fetcUrl","fetch","json","formatImageUrl","imageId","wallets","listings","total","page","search","previewWallets","recomendedWallets","getProjectId","ExplorerCtrl","getPreviewWallets","values","getRecomendedWallets","getPaginatedWallets","listingsObj","type","getImageUrl","resetSearch","history","view","data","RouterCtrl","replace","goBack","pop","last","ModalCtrl","options","uri","route","interval","setInterval","clearInterval","close","a","h","c","m","t","themeMode","ThemeCtrl","setThemeConfig","theme","themeVariables","s","__spreadValues","message","variant","ToastCtrl","openToast","closeToast","Buffer","global","process","env","l","n","Web3Modal","openModal","closeModal","subscribeModal","setTheme","i","initUi","modal","document","createElement","body","insertAdjacentElement"],"sourceRoot":""}